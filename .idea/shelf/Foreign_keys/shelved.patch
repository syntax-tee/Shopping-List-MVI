Index: libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListCacheModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListCacheModel.kt	(date 1599323023131)
+++ libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListCacheModel.kt	(date 1599323023131)
@@ -0,0 +1,23 @@
+package com.zizohanto.android.tobuy.cache.models
+
+import androidx.room.*
+
+@Entity(tableName = "shopping_list")
+data class ShoppingListCacheModel(
+    @PrimaryKey
+    val id: String,
+    val name: String,
+    val budget: Double = 0.0,
+    val dateCreated: String,
+    val dateModified: String
+)
+
+data class ShoppingListWithProducts(
+    @Embedded val shoppingList: ShoppingListCacheModel,
+    @Relation(
+        parentColumn = "shoppingListId",
+        entityColumn = "productId",
+        associateBy = Junction(ShoppingListProductCrossRef::class)
+    )
+    val products: List<ProductCacheModel>
+)
\ No newline at end of file
Index: libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListProductCrossRef.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListProductCrossRef.kt	(date 1599323023144)
+++ libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ShoppingListProductCrossRef.kt	(date 1599323023144)
@@ -0,0 +1,25 @@
+package com.zizohanto.android.tobuy.cache.models
+
+import androidx.room.Entity
+import androidx.room.ForeignKey
+import androidx.room.PrimaryKey
+
+@Entity(
+    tableName = "shopping_list_product_cross_ref",
+    primaryKeys = ["shoppingListId", "productId"],
+    foreignKeys = [
+        ForeignKey(
+            entity = ShoppingListCacheModel::class,
+            parentColumns = ["id"],
+            childColumns = ["shoppingListId"],
+            onDelete = ForeignKey.CASCADE
+        ),
+        ForeignKey(
+            entity = ProductCacheModel::class,
+            parentColumns = ["id"],
+            childColumns = ["productId"],
+            onDelete = ForeignKey.CASCADE
+        )
+    ]
+)
+data class ShoppingListProductCrossRef(val shoppingListId: String, val productId: String)
\ No newline at end of file
Index: libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/room/ShoppingListDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/room/ShoppingListDao.kt	(date 1599317639759)
+++ libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/room/ShoppingListDao.kt	(date 1599317639759)
@@ -0,0 +1,7 @@
+package com.zizohanto.android.tobuy.cache.room
+
+import androidx.room.Dao
+
+@Dao
+interface ShoppingListDao {
+}
\ No newline at end of file
Index: libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ProductCacheModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ProductCacheModel.kt	(date 1599323023136)
+++ libraries/cache/src/main/java/com/zizohanto/android/tobuy/cache/models/ProductCacheModel.kt	(date 1599323023136)
@@ -0,0 +1,11 @@
+package com.zizohanto.android.tobuy.cache.models
+
+import androidx.room.*
+
+@Entity(tableName = "product")
+data class ProductCacheModel(
+    @PrimaryKey
+    val id: String,
+    val name: String,
+    val price: Double
+)
\ No newline at end of file
Index: libraries/cache/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/src/main/AndroidManifest.xml	(date 1599314385656)
+++ libraries/cache/src/main/AndroidManifest.xml	(date 1599314385656)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest package="com.zizohanto.android.tobuy.cache" />
\ No newline at end of file
Index: buildSrc/src/main/kotlin/AppDependencies.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Dependencies.View.Version.fragment\n\nconst val kotlinAndroid: String = \"android\"\nconst val kotlinAndroidExtension: String = \"android.extensions\"\nconst val kotlinKapt: String = \"kapt\"\nconst val ktLintVersion: String = \"0.36.0\"\n\nobject Config {\n    object Version {\n        const val minSdkVersion: Int = 21\n        const val compileSdkVersion: Int = 29\n        const val targetSdkVersion: Int = 29\n        const val versionName: String = \"1.0\"\n        const val versionCode: Int = 1\n    }\n\n    const val isMultiDexEnabled: Boolean = true\n\n    object Android {\n        const val applicationId: String = \"com.zizohanto.android.tobuy\"\n        const val testInstrumentationRunner: String = \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n}\n\ninterface Libraries {\n    val components: List<String>\n}\n\nobject Dependencies {\n    object AndroidX : Libraries {\n        object Version {\n            const val coreKtx: String = \"1.5.0-alpha02\"\n            const val navigation: String = \"2.3.0\"\n            const val multidex: String = \"2.0.1\"\n            const val lifeCycle: String = \"2.3.0-alpha07\"\n            const val activity: String = \"1.2.0-alpha08\"\n        }\n\n        const val coreKtx: String = \"androidx.core:core-ktx:${Version.coreKtx}\"\n        const val navigationFragmentKtx: String = \"androidx.navigation:navigation-fragment-ktx:${Version.navigation}\"\n        const val navigationUiKtx: String = \"androidx.navigation:navigation-ui-ktx:${Version.navigation}\"\n        const val multiDex: String = \"androidx.multidex:multidex:${Version.multidex}\"\n        const val activity: String = \"androidx.activity:activity:${Version.activity}\"\n        const val lifeCycleCommon: String = \"androidx.lifecycle:lifecycle-common-java8:${Version.lifeCycle}\"\n        const val viewModel: String = \"androidx.lifecycle:lifecycle-viewmodel-ktx:${Version.lifeCycle}\"\n\n        override val components: List<String>\n            get() = listOf(\n                    coreKtx, navigationFragmentKtx, navigationUiKtx, multiDex, activity,\n                    lifeCycleCommon, viewModel\n            )\n    }\n\n    object View : Libraries {\n        object Version {\n            const val materialComponent: String = \"1.3.0-alpha02\"\n            const val shimmerLayout: String = \"0.5.0\"\n            const val appCompat: String = \"1.3.0-alpha02\"\n            const val constraintLayout: String = \"2.0.1\"\n            const val fragment: String = \"1.3.0-alpha08\"\n            const val recyclerView: String = \"1.2.0-alpha05\"\n        }\n\n        const val appCompat: String = \"androidx.appcompat:appcompat:${Version.appCompat}\"\n        const val fragment: String = \"androidx.fragment:fragment-ktx:${Version.fragment}\"\n        const val materialComponent: String = \"com.google.android.material:material:${Version.materialComponent}\"\n        const val shimmerLayout: String = \"com.facebook.shimmer:shimmer:${Version.shimmerLayout}\"\n        const val constraintLayout: String = \"androidx.constraintlayout:constraintlayout:${Version.constraintLayout}\"\n        const val recyclerView: String = \"androidx.recyclerview:recyclerview:${Version.recyclerView}\"\n        override val components: List<String> = listOf(appCompat, fragment)\n    }\n\n    object FlowBinding {\n        private const val flowBinding: String = \"1.0.0-alpha04\"\n        const val android: String = \"io.github.reactivecircus.flowbinding:flowbinding-android:$flowBinding\"\n        const val lifecycle: String = \"io.github.reactivecircus.flowbinding:flowbinding-lifecycle:$flowBinding\"\n    }\n\n    object DI {\n        object Version {\n            const val javaxInject: String = \"1\"\n            const val hiltAndroid: String = \"2.28.3-alpha\"\n            const val hiltViewModel: String = \"1.0.0-alpha02\"\n        }\n\n        object AnnotationProcessor {\n            const val hiltAndroid: String = \"com.google.dagger:hilt-android-compiler:${Version.hiltAndroid}\"\n            const val hiltCompiler: String = \"androidx.hilt:hilt-compiler:${Version.hiltViewModel}\"\n        }\n\n        const val javaxInject: String = \"javax.inject:javax.inject:${Version.javaxInject}\"\n        const val hiltAndroid: String = \"com.google.dagger:hilt-android:${Version.hiltAndroid}\"\n        const val hiltViewModel: String = \"androidx.hilt:hilt-lifecycle-viewmodel:${Version.hiltViewModel}\"\n        const val hiltTesting: String = \"com.google.dagger:hilt-android-testing:${Version.hiltAndroid}\"\n    }\n\n    object Coroutines : Libraries {\n        object Version {\n            const val coroutines: String = \"1.3.9\"\n        }\n\n        const val core: String = \"org.jetbrains.kotlinx:kotlinx-coroutines-core:${Version.coroutines}\"\n        const val android: String = \"org.jetbrains.kotlinx:kotlinx-coroutines-android:${Version.coroutines}\"\n\n        override val components: List<String> = listOf(core, android)\n    }\n\n    object Cache {\n        object Version {\n            const val room: String = \"2.3.0-alpha02\"\n        }\n\n        object AnnotationProcessor {\n            const val room: String = \"androidx.room:room-compiler:${Version.room}\"\n        }\n\n        const val room: String = \"androidx.room:room-ktx:${Version.room}\"\n    }\n\n    object Test {\n        object Version {\n            const val junit: String = \"4.13\"\n            const val runner: String = \"1.3.0\"\n            const val rules: String = \"1.3.0\"\n            const val testExt: String = \"1.1.2\"\n            const val espresso: String = \"3.3.0\"\n            const val truth: String = \"1.0.1\"\n            const val robolectric: String = \"4.4\"\n            const val archCoreTest: String = \"1.1.1\"\n        }\n\n        const val junit: String = \"junit:junit:${Version.junit}\"\n        const val runner: String = \"androidx.test:runner:${Version.runner}\"\n        const val rules: String = \"androidx.test:rules:${Version.rules}\"\n        const val fragmentTesting: String = \"androidx.fragment:fragment-testing:$fragment\"\n        const val androidXTest: String = \"androidx.test.ext:junit:${Version.testExt}\"\n        const val espresso: String = \"androidx.test.espresso:espresso-core:${Version.espresso}\"\n        const val espressoContrib: String = \"androidx.test.espresso:espresso-contrib:${Version.espresso}\"\n        const val archCoreTest: String = \"android.arch.core:core-testing:${Version.archCoreTest}\"\n        const val truth: String = \"com.google.truth:truth:${Version.truth}\"\n        const val coroutinesTest: String = \"org.jetbrains.kotlinx:kotlinx-coroutines-test:${Coroutines.Version.coroutines}\"\n        const val robolectric: String = \"org.robolectric:robolectric:${Version.robolectric}\"\n    }\n}\n\nobject ProjectLib {\n    const val app: String = \":app\"\n    const val core: String = \":core\"\n    const val presentation: String = \":presentation\"\n    const val domain: String = \":libraries:domain\"\n    const val data: String = \":libraries:data\"\n    const val cache: String = \":libraries:cache\"\n    const val testUtils: String = \":libraries:testUtils\"\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- buildSrc/src/main/kotlin/AppDependencies.kt	(revision 556273a399971b5d06add18fc1da5d0cc12bab0c)
+++ buildSrc/src/main/kotlin/AppDependencies.kt	(date 1599315178719)
@@ -114,7 +114,7 @@
             const val room: String = "androidx.room:room-compiler:${Version.room}"
         }
 
-        const val room: String = "androidx.room:room-ktx:${Version.room}"
+        const val room: String = "androidx.room:room-runtime:${Version.room}"
     }
 
     object Test {
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"11\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n            <option value=\"$PROJECT_DIR$/buildSrc\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 556273a399971b5d06add18fc1da5d0cc12bab0c)
+++ .idea/gradle.xml	(date 1599314822643)
@@ -13,10 +13,13 @@
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
             <option value="$PROJECT_DIR$/buildSrc" />
+            <option value="$PROJECT_DIR$/libraries" />
+            <option value="$PROJECT_DIR$/libraries/cache" />
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
+    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: libraries/cache/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/build.gradle.kts	(date 1599315178722)
+++ libraries/cache/build.gradle.kts	(date 1599315178722)
@@ -0,0 +1,56 @@
+import Dependencies.Cache
+import Dependencies.DI
+import Dependencies.Test
+import ProjectLib.data
+import ProjectLib.testUtils
+
+plugins {
+    androidLibrary
+    kotlin(kotlinAndroid)
+    kotlin(kotlinKapt)
+    daggerHilt
+}
+
+android {
+    defaultConfig {
+        minSdkVersion(Config.Version.minSdkVersion)
+        compileSdkVersion(Config.Version.compileSdkVersion)
+        targetSdkVersion(Config.Version.targetSdkVersion)
+
+        javaCompileOptions {
+            annotationProcessorOptions {
+                arguments.plusAssign(Pair("room.incremental", "true"))
+            }
+        }
+        buildConfigField("int", "databaseVersion", 1.toString())
+    }
+
+    kotlinOptions {
+        jvmTarget = JavaVersion.VERSION_1_8.toString()
+    }
+
+    compileOptions {
+        sourceCompatibility = JavaVersion.VERSION_1_8
+        targetCompatibility = JavaVersion.VERSION_1_8
+    }
+
+    buildTypes {
+        named(BuildType.DEBUG) {
+            isMinifyEnabled = BuildTypeDebug.isMinifyEnabled
+            versionNameSuffix = BuildTypeDebug.versionNameSuffix
+        }
+    }
+}
+
+dependencies {
+    implementation(DI.hiltAndroid)
+    api(Cache.room)
+
+    testImplementation(Test.runner)
+    testImplementation(Test.androidXTest)
+    testImplementation(Test.robolectric)
+    annotationProcessor("androidx.room:room-compiler:2.2.5")
+
+    kapt(Cache.AnnotationProcessor.room)
+    kapt(DI.AnnotationProcessor.hiltAndroid)
+}
Index: libraries/cache/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/proguard-rules.pro	(date 1599314131578)
+++ libraries/cache/proguard-rules.pro	(date 1599314131578)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.kts.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: libraries/cache/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- libraries/cache/.gitignore	(date 1599313965978)
+++ libraries/cache/.gitignore	(date 1599313965978)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>rootProject.name = \"Shopping List\"\ninclude(\n    \":app\"\n)\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle.kts	(revision 556273a399971b5d06add18fc1da5d0cc12bab0c)
+++ settings.gradle.kts	(date 1599314566746)
@@ -1,5 +1,5 @@
 rootProject.name = "Shopping List"
 include(
-    ":app"
+    ":app",
+    ":libraries:cache"
 )
-
diff --git libraries/cache/consumer-rules.pro libraries/cache/consumer-rules.pro
new file mode 100644
